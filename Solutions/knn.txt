import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

%matplotlib inline

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score

dataset.isnull().sum()
dataset.info()

d = dataset['density']
bins = 10


plt.hist(d,bins)
plt.title("histogram (1)")
plt.xlabel("density(water)")
plt.ylabel("Frequency")
plt.show()

fsd = dataset['free sulfur dioxide']
bins = 10


plt.hist(fsd,bins,color = "red")
plt.title("histogram (3)")
plt.xlabel(" free form of SO2")
plt.ylabel("Frequency")
plt.show()


for cl in dataset:
    plt.figure()
    dataset.boxplot([cl])

d = dataset["density"]
ph = dataset["pH"]

plt.scatter(d, ph)
plt.title("Scatter Plot (1)")
plt.xlabel("density (water)")
plt.ylabel("pH (wine)")
plt.show()

features = ['citric acid','alcohol','residual sugar','pH','total sulfur dioxide']  #input values

x = dataset[features]
y = dataset['quality']   


from sklearn.preprocessing import LabelEncoder
le =LabelEncoder()
y= le.fit_transform(y)


train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.10 , random_state=3,shuffle=True)
s_c = StandardScaler()
train_x=s_c.fit_transform(train_x)
test_x=s_c.fit_transform(test_x)


Knn = KNeighborsClassifier (n_neighbors=7,p=1)
Knn.fit(train_x,train_y)


y_pred=Knn.predict(test_x)
y_pred


test_y

c_m = confusion_matrix(test_y,y_pred)
c_m

print("Wrong values predicted out of total values : ")
print((test_y!=y_pred).sum(),'/',((test_y==y_pred).sum()+(test_y!=y_pred).sum()))

print('percentage Accuracy using KNN is : ',100*accuracy_score(test_y,y_pred))


